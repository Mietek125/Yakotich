Export Function PrepareSolBun(skill, b);
var un, dir;
begin
uc_side := GetSide(b);
uc_nation := GetNation(b);

dir := GetDir(b) - 3;

if dir < 0 then
   dir := 6 + dir;

un := CreateHuman;
SetDir(un, dir);
PlaceHumanInUnit(un, b);
End;

Export Function GetCountOfBuildingsInBase(base, btype);
var i, tmp;
begin
result := 0;
tmp := FilterAllUnits([f_btype, btype]);

if not base or not tmp then
   exit;

for i in tmp do
    if GetBase(i) = base then
       result := result + 1;

End;

Every 1 trigger IsSelected(Pezet) do
begin
PezetExp([1,2,3,4]);
Wait(0$05);
Say(Pezet,'1Pezet-Sikret');
TeleportUnit(Pezet,139,74,120,True);
Wait(0$05);
RemoveUnit(Pezet);
SaveVariable(1,'PezetSaved');
SaveCharacters(Pezet,'Pezet');
SetAchievement('ACH_PEZET');
End;

Export Function PezetExp(q);
var dec, q1;
begin
  dec = SelectiveQuery('PezetQuery', q);
  case dec of
   1:begin
     AddExperience_NoLimit(Yakotich,1,500);
     end;
   2:begin
     AddExperience_NoLimit(Yakotich,2,500);
     end;
   3:begin
     AddExperience_NoLimit(Yakotich,3,500);
     end;
    4:begin
     AddExperience_NoLimit(Yakotich,4,500);
     end;

  end;
end;

Every 0$1 Trigger IsDead(Yakotich) do
begin

YouLost('YakotichDead');

end;

Every 0$1 Trigger IsDead(Mietek) do
begin

YouLost('MietekDead');

end;

// Czas do przybycia maksima
Every 0$1 Trigger maksim_coming = True do
begin
enable;

if MaksimTime then
   begin
   MaksimTime := MaksimTime - 0$1;
   display_strings := ['#MaksimTime', MaksimTime];
   end
else
   begin
   display_strings := '';
   disable;
   end;
End;

