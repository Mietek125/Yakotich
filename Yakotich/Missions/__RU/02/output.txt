// starting begin ResetFog ;
   0: CALL_OW 335
// Init ;
   4: CALL 36 0 0
// AnimateTrees ( true ) ;
   8: LD_INT 1
  10: PPUSH
  11: CALL_OW 573
// Randomize ;
  15: CALL_OW 10
// RandomizeAll ;
  19: CALL_OW 11
// InitRussian ;
  23: CALL 97 0 0
// Action ;
  27: CALL 968 0 0
// DebugMode ;
  31: CALL 60 0 0
// end ;
  35: END
// export Yakotich , Mietek , Boris , Vasilij , Michail , Constantin ; export Maksim , Fiodor , Pavel , Zakhar , Aleksiej , Aleksandr ; export Morozov ; export MietekCrew ; export YakotichCrew ; export Tank , Pojazd ; export SelectedPeople ; export debug ; export mission_prefix ; export exit_ready ; export MyPeople ; function Init ; begin
  36: LD_INT 0
  38: PPUSH
// mission_prefix := 02_ ;
  39: LD_ADDR_EXP 20
  43: PUSH
  44: LD_STRING 02_
  46: ST_TO_ADDR
// debug := false ;
  47: LD_ADDR_EXP 19
  51: PUSH
  52: LD_INT 0
  54: ST_TO_ADDR
// end ;
  55: LD_VAR 0 1
  59: RET
// function DebugMode ; var i ; begin
  60: LD_INT 0
  62: PPUSH
  63: PPUSH
// if not debug then
  64: LD_EXP 19
  68: NOT
  69: IFFALSE 73
// exit ;
  71: GO 92
// Difficulty := 3 ;
  73: LD_ADDR_OWVAR 67
  77: PUSH
  78: LD_INT 3
  80: ST_TO_ADDR
// TurnFogOff ( ) ;
  81: CALL_OW 537
// FogOff ( 3 ) ;
  85: LD_INT 3
  87: PPUSH
  88: CALL_OW 344
// end ; end_of_file
  92: LD_VAR 0 1
  96: RET
// export function InitRussian ; begin
  97: LD_INT 0
  99: PPUSH
// Uc_Nation := 3 ;
 100: LD_ADDR_OWVAR 21
 104: PUSH
 105: LD_INT 3
 107: ST_TO_ADDR
// Uc_Side := 3 ;
 108: LD_ADDR_OWVAR 20
 112: PUSH
 113: LD_INT 3
 115: ST_TO_ADDR
// Yakotich := PrepareUnit ( Yakotich , true , 01_ ) ;
 116: LD_ADDR_EXP 1
 120: PUSH
 121: LD_STRING Yakotich
 123: PPUSH
 124: LD_INT 1
 126: PPUSH
 127: LD_STRING 01_
 129: PPUSH
 130: CALL 683 0 3
 134: ST_TO_ADDR
// Uc_Side := 6 ;
 135: LD_ADDR_OWVAR 20
 139: PUSH
 140: LD_INT 6
 142: ST_TO_ADDR
// Mietek := PrepareUnit ( Mietek , true , 01_ ) ;
 143: LD_ADDR_EXP 2
 147: PUSH
 148: LD_STRING Mietek
 150: PPUSH
 151: LD_INT 1
 153: PPUSH
 154: LD_STRING 01_
 156: PPUSH
 157: CALL 683 0 3
 161: ST_TO_ADDR
// Boris := PrepareUnit ( Boris , true , 01_ ) ;
 162: LD_ADDR_EXP 3
 166: PUSH
 167: LD_STRING Boris
 169: PPUSH
 170: LD_INT 1
 172: PPUSH
 173: LD_STRING 01_
 175: PPUSH
 176: CALL 683 0 3
 180: ST_TO_ADDR
// Michail := PrepareUnit ( Michail , true , 01_ ) ;
 181: LD_ADDR_EXP 5
 185: PUSH
 186: LD_STRING Michail
 188: PPUSH
 189: LD_INT 1
 191: PPUSH
 192: LD_STRING 01_
 194: PPUSH
 195: CALL 683 0 3
 199: ST_TO_ADDR
// Vasilij := PrepareUnit ( Vasilij , true , 01_ ) ;
 200: LD_ADDR_EXP 4
 204: PUSH
 205: LD_STRING Vasilij
 207: PPUSH
 208: LD_INT 1
 210: PPUSH
 211: LD_STRING 01_
 213: PPUSH
 214: CALL 683 0 3
 218: ST_TO_ADDR
// Constantin := PrepareUnit ( Constantin , true , 01_ ) ;
 219: LD_ADDR_EXP 6
 223: PUSH
 224: LD_STRING Constantin
 226: PPUSH
 227: LD_INT 1
 229: PPUSH
 230: LD_STRING 01_
 232: PPUSH
 233: CALL 683 0 3
 237: ST_TO_ADDR
// Maksim := PrepareUnit ( Maksim , true , 01_ ) ;
 238: LD_ADDR_EXP 7
 242: PUSH
 243: LD_STRING Maksim
 245: PPUSH
 246: LD_INT 1
 248: PPUSH
 249: LD_STRING 01_
 251: PPUSH
 252: CALL 683 0 3
 256: ST_TO_ADDR
// Fiodor := PrepareUnit ( Fiodor , true , 01_ ) ;
 257: LD_ADDR_EXP 8
 261: PUSH
 262: LD_STRING Fiodor
 264: PPUSH
 265: LD_INT 1
 267: PPUSH
 268: LD_STRING 01_
 270: PPUSH
 271: CALL 683 0 3
 275: ST_TO_ADDR
// Aleksiej := PrepareUnit ( Aleksiej , true , 01_ ) ;
 276: LD_ADDR_EXP 11
 280: PUSH
 281: LD_STRING Aleksiej
 283: PPUSH
 284: LD_INT 1
 286: PPUSH
 287: LD_STRING 01_
 289: PPUSH
 290: CALL 683 0 3
 294: ST_TO_ADDR
// Pavel := PrepareUnit ( Pavel , true , 01_ ) ;
 295: LD_ADDR_EXP 9
 299: PUSH
 300: LD_STRING Pavel
 302: PPUSH
 303: LD_INT 1
 305: PPUSH
 306: LD_STRING 01_
 308: PPUSH
 309: CALL 683 0 3
 313: ST_TO_ADDR
// Zakhar := PrepareUnit ( Zakhar , true , 01_ ) ;
 314: LD_ADDR_EXP 10
 318: PUSH
 319: LD_STRING Zakhar
 321: PPUSH
 322: LD_INT 1
 324: PPUSH
 325: LD_STRING 01_
 327: PPUSH
 328: CALL 683 0 3
 332: ST_TO_ADDR
// Aleksandr := PrepareUnit ( Aleksandr , true , 01_ ) ;
 333: LD_ADDR_EXP 12
 337: PUSH
 338: LD_STRING Aleksandr
 340: PPUSH
 341: LD_INT 1
 343: PPUSH
 344: LD_STRING 01_
 346: PPUSH
 347: CALL 683 0 3
 351: ST_TO_ADDR
// Morozov := PrepareUnit ( Morozov , false ,  ) ;
 352: LD_ADDR_EXP 13
 356: PUSH
 357: LD_STRING Morozov
 359: PPUSH
 360: LD_INT 0
 362: PPUSH
 363: LD_STRING 
 365: PPUSH
 366: CALL 683 0 3
 370: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Yakotich ;
 371: LD_ADDR_EXP 15
 375: PUSH
 376: LD_EXP 15
 380: PUSH
 381: LD_EXP 1
 385: ADD
 386: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Maksim ;
 387: LD_ADDR_EXP 15
 391: PUSH
 392: LD_EXP 15
 396: PUSH
 397: LD_EXP 7
 401: ADD
 402: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Michail ;
 403: LD_ADDR_EXP 15
 407: PUSH
 408: LD_EXP 15
 412: PUSH
 413: LD_EXP 5
 417: ADD
 418: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Fiodor ;
 419: LD_ADDR_EXP 15
 423: PUSH
 424: LD_EXP 15
 428: PUSH
 429: LD_EXP 8
 433: ADD
 434: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Vasilij ;
 435: LD_ADDR_EXP 15
 439: PUSH
 440: LD_EXP 15
 444: PUSH
 445: LD_EXP 4
 449: ADD
 450: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Constantin ;
 451: LD_ADDR_EXP 15
 455: PUSH
 456: LD_EXP 15
 460: PUSH
 461: LD_EXP 6
 465: ADD
 466: ST_TO_ADDR
// YakotichCrew := YakotichCrew ^ Boris ;
 467: LD_ADDR_EXP 15
 471: PUSH
 472: LD_EXP 15
 476: PUSH
 477: LD_EXP 3
 481: ADD
 482: ST_TO_ADDR
// PrepareSolBun ( Zakhar , RuB1 ) ;
 483: LD_EXP 10
 487: PPUSH
 488: LD_INT 18
 490: PPUSH
 491: CALL 746 0 2
// PrepareSolBun ( Aleksandr , RuB2 ) ;
 495: LD_EXP 12
 499: PPUSH
 500: LD_INT 80
 502: PPUSH
 503: CALL 746 0 2
// PrepareSolBun ( Aleksiej , RuB4 ) ;
 507: LD_EXP 11
 511: PPUSH
 512: LD_INT 96
 514: PPUSH
 515: CALL 746 0 2
// PlaceHumanInUnit ( Fiodor , RuA1 ) ;
 519: LD_EXP 8
 523: PPUSH
 524: LD_INT 77
 526: PPUSH
 527: CALL_OW 52
// PlaceHumanInUnit ( Constantin , RuA1 ) ;
 531: LD_EXP 6
 535: PPUSH
 536: LD_INT 77
 538: PPUSH
 539: CALL_OW 52
// PlaceHumanInUnit ( Boris , RuDep ) ;
 543: LD_EXP 3
 547: PPUSH
 548: LD_INT 15
 550: PPUSH
 551: CALL_OW 52
// PlaceHumanInUnit ( Pavel , RuWorkshop ) ;
 555: LD_EXP 9
 559: PPUSH
 560: LD_INT 82
 562: PPUSH
 563: CALL_OW 52
// PlaceHumanInUnit ( Vasilij , RuLab ) ;
 567: LD_EXP 4
 571: PPUSH
 572: LD_INT 83
 574: PPUSH
 575: CALL_OW 52
// PlaceHumanInUnit ( Michail , RuLab ) ;
 579: LD_EXP 5
 583: PPUSH
 584: LD_INT 83
 586: PPUSH
 587: CALL_OW 52
// PlaceUnitArea ( Mietek , MietekSpawn , false ) ;
 591: LD_EXP 2
 595: PPUSH
 596: LD_INT 2
 598: PPUSH
 599: LD_INT 0
 601: PPUSH
 602: CALL_OW 49
// PlaceUnitArea ( Yakotich , YakotichSpawn , false ) ;
 606: LD_EXP 1
 610: PPUSH
 611: LD_INT 1
 613: PPUSH
 614: LD_INT 0
 616: PPUSH
 617: CALL_OW 49
// PlaceUnitArea ( Maksim , MaksimSpawn , false ) ;
 621: LD_EXP 7
 625: PPUSH
 626: LD_INT 3
 628: PPUSH
 629: LD_INT 0
 631: PPUSH
 632: CALL_OW 49
// ComTurnUnit ( Yakotich , Mietek ) ;
 636: LD_EXP 1
 640: PPUSH
 641: LD_EXP 2
 645: PPUSH
 646: CALL_OW 119
// ComTurnUnit ( Mietek , Yakotich ) ;
 650: LD_EXP 2
 654: PPUSH
 655: LD_EXP 1
 659: PPUSH
 660: CALL_OW 119
// ComTurnUnit ( Maksim , Yakotich ) ;
 664: LD_EXP 7
 668: PPUSH
 669: LD_EXP 1
 673: PPUSH
 674: CALL_OW 119
// end ; end_of_file
 678: LD_VAR 0 1
 682: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
 683: LD_INT 0
 685: PPUSH
 686: PPUSH
// if exist_mode then
 687: LD_VAR 0 2
 691: IFFALSE 716
// unit := CreateCharacter ( prefix & ident ) else
 693: LD_ADDR_VAR 0 5
 697: PUSH
 698: LD_VAR 0 3
 702: PUSH
 703: LD_VAR 0 1
 707: STR
 708: PPUSH
 709: CALL_OW 34
 713: ST_TO_ADDR
 714: GO 731
// unit := NewCharacter ( ident ) ;
 716: LD_ADDR_VAR 0 5
 720: PUSH
 721: LD_VAR 0 1
 725: PPUSH
 726: CALL_OW 25
 730: ST_TO_ADDR
// result := unit ;
 731: LD_ADDR_VAR 0 4
 735: PUSH
 736: LD_VAR 0 5
 740: ST_TO_ADDR
// end ;
 741: LD_VAR 0 4
 745: RET
// export function PrepareSolBun ( skill , b ) ; var un , dir ; begin
 746: LD_INT 0
 748: PPUSH
 749: PPUSH
 750: PPUSH
// uc_side := GetSide ( b ) ;
 751: LD_ADDR_OWVAR 20
 755: PUSH
 756: LD_VAR 0 2
 760: PPUSH
 761: CALL_OW 255
 765: ST_TO_ADDR
// uc_nation := GetNation ( b ) ;
 766: LD_ADDR_OWVAR 21
 770: PUSH
 771: LD_VAR 0 2
 775: PPUSH
 776: CALL_OW 248
 780: ST_TO_ADDR
// dir := GetDir ( b ) - 3 ;
 781: LD_ADDR_VAR 0 5
 785: PUSH
 786: LD_VAR 0 2
 790: PPUSH
 791: CALL_OW 254
 795: PUSH
 796: LD_INT 3
 798: MINUS
 799: ST_TO_ADDR
// if dir < 0 then
 800: LD_VAR 0 5
 804: PUSH
 805: LD_INT 0
 807: LESS
 808: IFFALSE 824
// dir := 6 + dir ;
 810: LD_ADDR_VAR 0 5
 814: PUSH
 815: LD_INT 6
 817: PUSH
 818: LD_VAR 0 5
 822: PLUS
 823: ST_TO_ADDR
// un := CreateHuman ;
 824: LD_ADDR_VAR 0 4
 828: PUSH
 829: CALL_OW 44
 833: ST_TO_ADDR
// SetDir ( un , dir ) ;
 834: LD_VAR 0 4
 838: PPUSH
 839: LD_VAR 0 5
 843: PPUSH
 844: CALL_OW 233
// PlaceHumanInUnit ( un , b ) ;
 848: LD_VAR 0 4
 852: PPUSH
 853: LD_VAR 0 2
 857: PPUSH
 858: CALL_OW 52
// end ;
 862: LD_VAR 0 3
 866: RET
// export function Czolg ; begin
 867: LD_INT 0
 869: PPUSH
// if LoadVariable ( 01_Vehicle , 0 ) then
 870: LD_STRING 01_Vehicle
 872: PPUSH
 873: LD_INT 0
 875: PPUSH
 876: CALL_OW 30
 880: IFFALSE 963
// begin Uc_Side = 3 ;
 882: LD_ADDR_OWVAR 20
 886: PUSH
 887: LD_INT 3
 889: ST_TO_ADDR
// Uc_Nation = 3 ;
 890: LD_ADDR_OWVAR 21
 894: PUSH
 895: LD_INT 3
 897: ST_TO_ADDR
// Uc_Direction = 2 ;
 898: LD_ADDR_OWVAR 24
 902: PUSH
 903: LD_INT 2
 905: ST_TO_ADDR
// Vc_Chassis = 21 ;
 906: LD_ADDR_OWVAR 37
 910: PUSH
 911: LD_INT 21
 913: ST_TO_ADDR
// Vc_Control = 1 ;
 914: LD_ADDR_OWVAR 38
 918: PUSH
 919: LD_INT 1
 921: ST_TO_ADDR
// Vc_Engine = 1 ;
 922: LD_ADDR_OWVAR 39
 926: PUSH
 927: LD_INT 1
 929: ST_TO_ADDR
// Vc_Weapon = 42 ;
 930: LD_ADDR_OWVAR 40
 934: PUSH
 935: LD_INT 42
 937: ST_TO_ADDR
// Tank := CreateVehicle ;
 938: LD_ADDR_EXP 16
 942: PUSH
 943: CALL_OW 45
 947: ST_TO_ADDR
// PlaceUnitArea ( Tank , VehSpawn , false ) ;
 948: LD_EXP 16
 952: PPUSH
 953: LD_INT 4
 955: PPUSH
 956: LD_INT 0
 958: PPUSH
 959: CALL_OW 49
// end ; end ; end_of_file
 963: LD_VAR 0 1
 967: RET
// export function Action ; var i ; begin
 968: LD_INT 0
 970: PPUSH
 971: PPUSH
// Czolg ;
 972: CALL 867 0 0
// InGameOn ;
 976: CALL_OW 8
// Wait ( 0 0$03 ) ;
 980: LD_INT 105
 982: PPUSH
 983: CALL_OW 67
// Say ( Yakotich , 2Yak-01 ) ;
 987: LD_EXP 1
 991: PPUSH
 992: LD_STRING 2Yak-01
 994: PPUSH
 995: CALL_OW 88
// Say ( Maksim , 2Mak-01 ) ;
 999: LD_EXP 7
1003: PPUSH
1004: LD_STRING 2Mak-01
1006: PPUSH
1007: CALL_OW 88
// Say ( Maksim , 2Mak-02 ) ;
1011: LD_EXP 7
1015: PPUSH
1016: LD_STRING 2Mak-02
1018: PPUSH
1019: CALL_OW 88
// Say ( Maksim , 2Mak-03 ) ;
1023: LD_EXP 7
1027: PPUSH
1028: LD_STRING 2Mak-03
1030: PPUSH
1031: CALL_OW 88
// Say ( Maksim , 2Mak-04 ) ;
1035: LD_EXP 7
1039: PPUSH
1040: LD_STRING 2Mak-04
1042: PPUSH
1043: CALL_OW 88
// Say ( Maksim , 2Mak-05 ) ;
1047: LD_EXP 7
1051: PPUSH
1052: LD_STRING 2Mak-05
1054: PPUSH
1055: CALL_OW 88
// Say ( Mietek , 2Ryn-01 ) ;
1059: LD_EXP 2
1063: PPUSH
1064: LD_STRING 2Ryn-01
1066: PPUSH
1067: CALL_OW 88
// Say ( Mietek , 2Ryn-02 ) ;
1071: LD_EXP 2
1075: PPUSH
1076: LD_STRING 2Ryn-02
1078: PPUSH
1079: CALL_OW 88
// Say ( Yakotich , 2Yak-02 ) ;
1083: LD_EXP 1
1087: PPUSH
1088: LD_STRING 2Yak-02
1090: PPUSH
1091: CALL_OW 88
// Say ( Yakotich , 2Yak-03 ) ;
1095: LD_EXP 1
1099: PPUSH
1100: LD_STRING 2Yak-03
1102: PPUSH
1103: CALL_OW 88
// Wait ( 0 0$03 ) ;
1107: LD_INT 105
1109: PPUSH
1110: CALL_OW 67
// SayRadio ( Yakotich , 2Yak-04 ) ;
1114: LD_EXP 1
1118: PPUSH
1119: LD_STRING 2Yak-04
1121: PPUSH
1122: CALL_OW 94
// SayRadio ( Morozov , 2Moro-01 ) ;
1126: LD_EXP 13
1130: PPUSH
1131: LD_STRING 2Moro-01
1133: PPUSH
1134: CALL_OW 94
// SayRadio ( Yakotich , 2Yak-05 ) ;
1138: LD_EXP 1
1142: PPUSH
1143: LD_STRING 2Yak-05
1145: PPUSH
1146: CALL_OW 94
// SayRadio ( Yakotich , 2Yak-06 ) ;
1150: LD_EXP 1
1154: PPUSH
1155: LD_STRING 2Yak-06
1157: PPUSH
1158: CALL_OW 94
// SayRadio ( Morozov , 2Moro-02 ) ;
1162: LD_EXP 13
1166: PPUSH
1167: LD_STRING 2Moro-02
1169: PPUSH
1170: CALL_OW 94
// SayRadio ( Morozov , 2Moro-03 ) ;
1174: LD_EXP 13
1178: PPUSH
1179: LD_STRING 2Moro-03
1181: PPUSH
1182: CALL_OW 94
// SayRadio ( Yakotich , 2Yak-07 ) ;
1186: LD_EXP 1
1190: PPUSH
1191: LD_STRING 2Yak-07
1193: PPUSH
1194: CALL_OW 94
// SayRadio ( Morozov , 2Moro-04 ) ;
1198: LD_EXP 13
1202: PPUSH
1203: LD_STRING 2Moro-04
1205: PPUSH
1206: CALL_OW 94
// SayRadio ( Yakotich , 1Yak-08 ) ;
1210: LD_EXP 1
1214: PPUSH
1215: LD_STRING 1Yak-08
1217: PPUSH
1218: CALL_OW 94
// Say ( Yakotich , 2Yak-09 ) ;
1222: LD_EXP 1
1226: PPUSH
1227: LD_STRING 2Yak-09
1229: PPUSH
1230: CALL_OW 88
// Say ( Mietek , 2Ryn-03 ) ;
1234: LD_EXP 2
1238: PPUSH
1239: LD_STRING 2Ryn-03
1241: PPUSH
1242: CALL_OW 88
// Say ( Yakotich , 2Yak-10 ) ;
1246: LD_EXP 1
1250: PPUSH
1251: LD_STRING 2Yak-10
1253: PPUSH
1254: CALL_OW 88
// Say ( Yakotich , 2Yak-11 ) ;
1258: LD_EXP 1
1262: PPUSH
1263: LD_STRING 2Yak-11
1265: PPUSH
1266: CALL_OW 88
// ComExitBuilding ( [ Michail , Vasilij , Fiodor , Constantin , Boris ] ) ;
1270: LD_EXP 5
1274: PUSH
1275: LD_EXP 4
1279: PUSH
1280: LD_EXP 8
1284: PUSH
1285: LD_EXP 6
1289: PUSH
1290: LD_EXP 3
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: LIST
1300: LIST
1301: PPUSH
1302: CALL_OW 122
// AddComMoveXY ( [ Michail , Vasilij , Constantin , Fiodor , Boris ] , 34 , 16 ) ;
1306: LD_EXP 5
1310: PUSH
1311: LD_EXP 4
1315: PUSH
1316: LD_EXP 6
1320: PUSH
1321: LD_EXP 8
1325: PUSH
1326: LD_EXP 3
1330: PUSH
1331: EMPTY
1332: LIST
1333: LIST
1334: LIST
1335: LIST
1336: LIST
1337: PPUSH
1338: LD_INT 34
1340: PPUSH
1341: LD_INT 16
1343: PPUSH
1344: CALL_OW 171
// Wait ( 0 0$03 ) ;
1348: LD_INT 105
1350: PPUSH
1351: CALL_OW 67
// Say ( Michail , 2Mich-01 ) ;
1355: LD_EXP 5
1359: PPUSH
1360: LD_STRING 2Mich-01
1362: PPUSH
1363: CALL_OW 88
// Say ( Yakotich , 2Yak-12 ) ;
1367: LD_EXP 1
1371: PPUSH
1372: LD_STRING 2Yak-12
1374: PPUSH
1375: CALL_OW 88
// AddComEnterUnit ( Yakotich , Tank ) ;
1379: LD_EXP 1
1383: PPUSH
1384: LD_EXP 16
1388: PPUSH
1389: CALL_OW 180
// AddComMoveXY ( YakotichCrew , 65 , 75 ) ;
1393: LD_EXP 15
1397: PPUSH
1398: LD_INT 65
1400: PPUSH
1401: LD_INT 75
1403: PPUSH
1404: CALL_OW 171
// ComEnterUnit ( Mietek , RuA1 ) ;
1408: LD_EXP 2
1412: PPUSH
1413: LD_INT 77
1415: PPUSH
1416: CALL_OW 120
// Wait ( 0 0$5 ) ;
1420: LD_INT 175
1422: PPUSH
1423: CALL_OW 67
// ChangeMap ( 1 , %_cont ) ;
1427: LD_INT 1
1429: PPUSH
1430: LD_STRING %_cont
1432: PPUSH
1433: CALL_OW 340
// end ;
1437: LD_VAR 0 1
1441: RET
